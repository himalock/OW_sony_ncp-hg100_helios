// SPDX-License-Identifier: GPL-2.0-only OR MIT

#include "qcom-ipq4019.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/qcom,tcsr.h>

/ {
	model = "Sony NCP-HG100";
	compatible = "sony,ncp-hg100", "qcom,ipq4019";

	chosen {
	/*	bootargs = "root=/dev/mmcblk0p16 rootfstype=squashfs,ext4 rootwait"; */
		bootargs-append = " clk_ignore_unused";
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512MB */
	};

	soc {
		rng@22000 {
			status = "okay";
		};

		mdio@90000 {
			status = "okay";
			pinctrl-0 = <&mdio_pins>;
			pinctrl-names = "default";
			phy-reset-gpio = <&tlmm 41 0>;
			bias-disable;
		};

		tcsr@1949000 {
			status = "okay";
			compatible = "qcom,tcsr";
			reg = <0x1949000 0x100>;
			qcom,wifi_glb_cfg = <TCSR_WIFI_GLB_CFG>;
		};

		tcsr@194b000 {
			status = "okay";
			compatible = "qcom,tcsr";
			reg = <0x194b000 0x100>;
			qcom,usb-hsphy-mode-select = <TCSR_USB_HSPHY_HOST_MODE>;
		};

		ess_tcsr@1953000 {
			status = "okay";
			compatible = "qcom,tcsr";
			reg = <0x1953000 0x1000>;
			qcom,ess-interface-select = <TCSR_ESS_PSGMII>;
		};

		tcsr@1957000 {
			status = "okay";
			compatible = "qcom,tcsr";
			reg = <0x1957000 0x100>;
			qcom,wifi_noc_memtype_m0_m2 = <TCSR_WIFI_NOC_MEMTYPE_M0_M2>;
		};

		ess-psgmii@98000 {
			status = "okay";
		};

		usb2@60f8800 {
			status = "okay";
		};

		usb3@8af8800 {
			status = "okay";
		};

		crypto@8e3a000 {
			status = "okay";
		};

		watchdog@b017000 {
			status = "okay";
		};

		edma@c080000 {
			status = "okay";
		};

		ess-switch@c000000 {
			status = "okay";
			switch_mac_mode = <0x0>; /* mac mode for RGMII RMII */
			switch_initvlas = <0x0007c 0x54>; /* PORT0_STATUS */
		};

		qpic-nand@79b0000 {
			status = "disabled";
		};
	};

	leds {
		compatible = "gpio-leds";
	};

	gpio-keys {
		compatible = "gpio_keys_polled";
		pinctrl-0 = <&gpiokey_pins>;
		pinctrl-names = "default";
		autorepeat;
		volup {
			label = "Volume Up";
			linux,code = <KEY_VOLUMEUP>;
			gpios = <&tlmm 39 GPIO_ACTIVE_HIGH>;
			linux,input-type = <EV_KEY>;
		};
		voldown {
			label = "Volume Down";
			linux,code = <KEY_VOLUMEDOWN>;
			gpios = <&tlmm 40 GPIO_ACTIVE_HIGH>;
			linux,input-type = <EV_KEY>;
		};
		alexatrigger {
			label = "Alexa Trigger";
			linux,code = <BTN_TRIGGER_HAPPY>;
			gpios = <&tlmm 42 GPIO_ACTIVE_HIGH>;
			linux,input-type = <EV_KEY>;
		};
		mute {
			label = "Mute";
			linux,code = <SW_MUTE_DEVICE>;
			gpios = <&tlmm 47 GPIO_ACTIVE_LOW>;
			linux,input-type = <EV_SW>;
		};
	};

	keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&tlmm 2 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
		};

		wps {
			label = "SETUP Button";
			gpios = <&tlmm 18 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_WPS_BUTTON>;
		};
	};

};

/*
 TOP Level Mode. Multiplexer (TLMM)
 //Right, I don't get it.
*/
&tlmm {
	serial_pins: serial_pinmux {
		mux {
			pins = "gpio16", "gpio17";
			function = "blsp_uart0";
			bias-disable;
		};
	};

	serial_1_pins: serial1_pinmux {
		mux {
			pins = "gpio8", "gpio9",
				"gpio10", "gpio11";
			function = "blsp_uart1";
			bias-disable;
		};
	};

	mdio_pins: mdio_pinmux {
		mux_1 {
			pins = "gpio6";
			function = "mdio0";
			bias-pull-up;
		};
		mux_2 {
			pins = "gpio7";
			function = "mdc";
			bias-pull-up;
		};
	};

	i2c_1_pins: i2c_1_pinmux {
		mux {
			pins = "gpio12", "gpio13";
			function = "blsp_i2c1";
			bias-disable;
		};
	};

	gpiokey_pins: gpiokey_pinmux {
		mux {
			pins = "gpio39", "gpio40", "gpio42", "gpio47";
			function = "gpio";
			bias-disable;
		};
	};

	sd_pins: sd_pins {
		pinmux {
			function = "sdio";
			pins = "gpio23", "gpio24", "gpio25", "gpio26",
				"gpio28", "gpio29", "gpio30", "gpio31";
			drive-strength = <4>;
		};

		pinmux_sd_clk {
			function = "sdio";
			pins = "gpio27";
			drive-strength = <16>;
		};

		pinmux_sd7 {
			function = "sdio";
			pins = "gpio32";
			drive-strength = <4>;
			bias-disable;
		};
	};

	helios_pins: helios_pinmux {
		//1 = UART0 as debug console ; 0 = UART0 as Zwave UART

		UART0_CTRL {
			pins = "gpio15";
			function = "gpio";
			output-low;
		};

		//Active low to reset the BT
		BT_RST {
			pins = "gpio66";
			function = "gpio";
			output-high;
		};

		//1 = BT power on ; 0 = BT power off
		BT_VREG_EN {
			pins = "gpio68";
			function = "gpio";
			output-high;
		};

		//1 = Reset button not be pressed ; 0 = Reset button be pressed
		SW_REST {
			pins = "gpio2";
			function = "gpio";
			input;
		};

		USB_FLT {
			pins = "gpio4";
			function = "gpio";
			input;
		};

		USB_EN {
			pins = "gpio36";
			function = "gpio";
			output-high;
		};

		//Audio PCM interface for BT
		PCM {
			pins = "gpio48", "gpio49", "gpio50", "gpio51";
			function = "aud_pin";
		};

		//Active low to reset the ZWAVE (at least 20ns)
		ZW_RST {
			pins = "gpio59";
			function = "gpio";
			output-high;
		};

		LTE_PWR {
			pins = "gpio20";
			function = "gpio";
			output-high;
		};

		LTE_RESET {
			pins = "gpio35";
			function = "gpio";
			input;
		};
	};
	audio_gpio_pins: audio_gpio_pinmux {
		mux_1 {
			pins = "gpio53";
			function = "gpio";
			output-high;
		};
		mux_2 {
			pins = "gpio57";
			function = "gpio";
			output-high;
		};
		mux_3 {
			pins = "gpio54";
			function = "gpio";
			output-high;
		};
	};
	audio_pins: audio_pinmux {
		mux_1 {
			pins = "gpio53";
			function = "i2s_tx_bclk";
		};
		mux_2 {
			pins = "gpio57";
			function = "i2s_tx_fsync";
		};
		mux_3 {
			pins = "gpio54";
			function = "i2s_td1";
		};
	};

	audio1_gpio_pins: audio1_gpio_pinmux {
		mux_1 {
			pins = "gpio60";
			function = "gpio";
			output-high;
		};
		mux_2 {
			pins = "gpio61";
			function = "gpio";
			output-high;
		};
		mux_3 {
			pins = "gpio63";
			function = "gpio";
			output-high;
		};
	};

	audio1_pins: audio1_pinmux {
		mux_1 {
			pins = "gpio60";
			function = "i2s_rx_bclk";
		};
		mux_2 {
			pins = "gpio61";
			function = "i2s_rx_fsync";
		};
		mux_3 {
			pins = "gpio63";
			function = "i2s_rxd";
		};
	};

	alc1304_pins: alc1304_pinmux {
		mux_1 {
			pins = "gpio44";
			function = "gpio";
			bias-disable;
		};
		mux_2 {
			pins = "gpio45";
			function = "gpio";
			bias-disable;
		};
	};

	cx2902x_reset: cx2902x_pinmux {
		mux_1 {
			pins = "gpio64";
			function = "gpio";
			bias-disable;
		};
		mux_2 {
			pins = "gpio65";
			function = "gpio";
			bias-disable;
		};
	};

	usb-pwr-en {
		gpio-hog;
		gpios = <36 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "Enable USB";
	};

	usb-ovc-detect {
		gpio-hog;
		gpios = <4 GPIO_ACTIVE_HIGH>;
		input;
		line-name = "USB-FLT";
	};

	lte-pwr {
		gpio-hog;
		gpios = <20 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "Enable LTE PWR";
	};

	bt-pwr {
		gpio-hog;
		gpios = <68 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "Enable BT PWR";
	};

	bt-rst {
		gpio-hog;
		gpios = <66 GPIO_ACTIVE_LOW>;
		output-high;
		line-name = "Enable BT Reset";
	};

};

/* emmc */
&vqmmc {
	status = "okay";
};

&sdhci {
	status = "okay";
	pinctrl-0 = <&sd_pins>;
	pinctrl-names = "default";
	cd-gpios = <&tlmm 22 GPIO_ACTIVE_LOW>;
	vqmmc-supply = <&vqmmc>;
};

/*
 BAM(Boot Assist Module)
 BLSP(BAM Low Speed Peripheral)
*/

&blsp_dma {
	status = "okay";
};

&cryptobam {
	status = "okay";
};

&blsp1_uart1 {
	pinctrl-0 = <&serial_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&blsp1_uart2 {
	pinctrl-0 = <&serial_1_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&blsp1_i2c4 { /* i2c1 */
/*
0x14 ?
0x15 mcu(thermal/fan controller)
0x18 dac
0x31 led
0x32 led
  led1:WAN,  led2 LAN
  led3:2.4G, led4 5G
  led5:NET,  led6 CLOUD
0x41 mic
*/
	pinctrl-0 = <&i2c_1_pins>;
	pinctrl-names = "default";
	status = "okay";

	led-controller@32 {
		/* 9-channel RGB LED controller */
		compatible = "ti,lp55231";
		reg = <0x32>;
		clock-mode = /bits/ 8 <0>; /* LP55XX_CLOCK_AUTO */
		enable-gpio = <&tlmm 1 GPIO_ACTIVE_HIGH>;

		chan0 {
			chan-name = "led1_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan1 {
			chan-name = "led1_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan2 {
			chan-name = "led2_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan3 {
			chan-name = "led2_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan4 {
			chan-name = "led3_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan5 {
			chan-name = "led3_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan6 {
			chan-name = "led1_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan7 {
			chan-name = "led2_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan8 {
			chan-name = "led3_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};
	};

	led-controller@33 {
		/* 9-channel RGB LED controller */
		compatible = "ti,lp55231";
		reg = <0x33>;
		clock-mode = /bits/ 8 <0>; /* LP55XX_CLOCK_AUTO */

		chan0 {
			chan-name = "led4_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan1 {
			chan-name = "led4_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan2 {
			chan-name = "led5_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan3 {
			chan-name = "led5_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan4 {
			chan-name = "led6_g";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan5 {
			chan-name = "led6_b";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan6 {
			chan-name = "led4_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan7 {
			chan-name = "led5_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};

		chan8 {
			chan-name = "led6_r";
			led-cur = /bits/ 8 <50>;
			max-cur = /bits/ 8 <100>;
		};
	};

/* no kernel drivers */
	rt5628@18 {
		compatible = "rt5628";
		reg = <0x18>;
		status = "ok";
		pinctrl-0 = <&alc1304_pins>;
		pinctrl-names = "default";
		shutdown-gpio = <&tlmm 44 GPIO_ACTIVE_LOW>;
		mute-gpio = <&tlmm 45 GPIO_ACTIVE_HIGH>;
	};

	conexant@41 {
		compatible = "conexant,cx2092x";
		reg = <0x41>;
		conexant,name = "cx2092x";
		reset-gpio = <&tlmm 65 GPIO_ACTIVE_HIGH>;
		pinctrl-0 = <&cx2902x_reset>;
		pinctrl-names = "default";
	};

	mcu@15 {
		compatible = "wistron,mcu";
		reg = <0x15>;
	};
};

&usb2_hs_phy {
	status = "okay";
};

&usb3_hs_phy {
	status = "okay";
};

&usb3_ss_phy {
	status = "okay";
};

&wifi0 {
	status = "okay";
	qcom,ath10k-calibration-variant = "Sony_NCP-HG100";
};

&wifi1 {
	status = "okay";
	qcom,ath10k-calibration-variant = "Sony_NCP-HG100";
};
